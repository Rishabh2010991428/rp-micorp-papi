<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="create-orders-sub-flow-test-suite.xml" />
	
	<munit:test name="create-customer-order-sub-flow-test-suite-create-orders-sub-flowTest" doc:id="10e0ad1c-30ed-4282-91cd-24aab1166846" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="get customer" doc:id="eb922334-0069-478b-9f89-8f3def210967" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="cfe6ade9-599a-4934-b6c6-6e408ec5f468" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://postorders\mock-getcustomer-payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="post customer" doc:id="3894d865-2bce-49db-a2f9-b94dab1ba1ee" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="f966f7f0-ad25-4aa7-b197-06d2a2952554" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://postorders\mock-postcustomer-payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="customerId" value="#[readUrl('classpath://postorders\set-customer-variables.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="post order" doc:id="bb2cb61d-6231-4398-bb17-3864f4d15b17" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="3a858412-5c4e-44b0-9fab-3dac85d80021" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://postorders\mock-postorder-payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="orderId" value="#[readUrl('classpath://postorders\set-order-variable.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="post items" doc:id="9b8c652a-1a4c-408f-9fb0-7683605be12f" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="a2eb29c6-c869-4c2d-ac2a-023335603631" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://postorders\mock-postitems-payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="7f42fff5-7053-4c15-969e-a4c28e0f0f3f" >
				<munit:payload value="#[readUrl('classpath://postorders\set-event-payload.dwl')]" encoding="UTF-8" mediaType="application/java" />
				<munit:variables >
					<munit:variable key="correlationId" value="1234" />
				</munit:variables>
			</munit:set-event>
			<flow-ref doc:name="post:\orders:application\json:rp-micorp-papi-config" doc:id="42460d47-8b4a-434d-aaf6-bafe977d3646" name="post-order" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="eba65e51-c490-4c3c-8efa-d52f8c7a9b35" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import postorders::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
