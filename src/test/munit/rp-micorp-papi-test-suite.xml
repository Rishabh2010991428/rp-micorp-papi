<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="ng-micorp-process-api-test-suite.xml" />
	<munit:test name="rp-micorp-papi-test-suite-ng-micorp-process-api-mainTest" doc:id="d189878a-fb2b-4182-b696-5ff0e5ea5251" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="68f5568e-40bc-4989-ad96-c31be7879654" processor="apikit:router">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="rp-micorp-papi-config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[readUrl('classpath://apikitrouter\mock-payload.dwl')]" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="d287fdd4-f31e-484b-b884-7d586802c918" >
				<munit:payload value="#[readUrl('classpath://apikitrouter/set-event-payload.dwl')]" encoding="UTF-8" mediaType="application/java" />
			</munit:set-event>
			<flow-ref doc:name="rp-micorp-papi-main" doc:id="0a25db92-4fef-49e7-9957-27d82a578b74" name="rp-micorp-papi-main"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert expression" doc:id="f48eb903-37ff-45df-a831-316c3933a2ec" >
				<munit-tools:that ><![CDATA[#[%dw 2.0
import apikitrouter::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	


</mule>
